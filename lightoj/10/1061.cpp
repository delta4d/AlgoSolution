/**
#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

int p[8], tot;

bool ok() {
	for (int i=0; i<8; ++i) for (int j=i+1; j<8; ++j) {
		if (p[i] == p[j]) return false;
		int x = j - i, y = p[j] - p[i];
		if (x == y || x == -y) return false;
	}
	return true;
}

void dfs(int d) {
	if (d == 8) {
		if (ok()) {
			printf("{");
			for (int i=0; i<8; ++i) printf("%d%s", p[i], i==7?"},\n":", ");
		}
		return;
	}
	for (int i=0; i<8; ++i) {
		p[d] = i;
		dfs(d+1);
	}
}

int main() {
	freopen("d:\\out.txt", "w", stdout);
	printf("const int pp[92][8] = {");
	dfs(0);
	puts("};");
	return 0;
}
**/

#include <cmath>
#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

const int INF = 0x3f3f3f3f;
const int pp[92][8] = {
	{0, 4, 7, 5, 2, 6, 1, 3},
	{0, 5, 7, 2, 6, 3, 1, 4},
	{0, 6, 3, 5, 7, 1, 4, 2},
	{0, 6, 4, 7, 1, 3, 5, 2},
	{1, 3, 5, 7, 2, 0, 6, 4},
	{1, 4, 6, 0, 2, 7, 5, 3},
	{1, 4, 6, 3, 0, 7, 5, 2},
	{1, 5, 0, 6, 3, 7, 2, 4},
	{1, 5, 7, 2, 0, 3, 6, 4},
	{1, 6, 2, 5, 7, 4, 0, 3},
	{1, 6, 4, 7, 0, 3, 5, 2},
	{1, 7, 5, 0, 2, 4, 6, 3},
	{2, 0, 6, 4, 7, 1, 3, 5},
	{2, 4, 1, 7, 0, 6, 3, 5},
	{2, 4, 1, 7, 5, 3, 6, 0},
	{2, 4, 6, 0, 3, 1, 7, 5},
	{2, 4, 7, 3, 0, 6, 1, 5},
	{2, 5, 1, 4, 7, 0, 6, 3},
	{2, 5, 1, 6, 0, 3, 7, 4},
	{2, 5, 1, 6, 4, 0, 7, 3},
	{2, 5, 3, 0, 7, 4, 6, 1},
	{2, 5, 3, 1, 7, 4, 6, 0},
	{2, 5, 7, 0, 3, 6, 4, 1},
	{2, 5, 7, 0, 4, 6, 1, 3},
	{2, 5, 7, 1, 3, 0, 6, 4},
	{2, 6, 1, 7, 4, 0, 3, 5},
	{2, 6, 1, 7, 5, 3, 0, 4},
	{2, 7, 3, 6, 0, 5, 1, 4},
	{3, 0, 4, 7, 1, 6, 2, 5},
	{3, 0, 4, 7, 5, 2, 6, 1},
	{3, 1, 4, 7, 5, 0, 2, 6},
	{3, 1, 6, 2, 5, 7, 0, 4},
	{3, 1, 6, 2, 5, 7, 4, 0},
	{3, 1, 6, 4, 0, 7, 5, 2},
	{3, 1, 7, 4, 6, 0, 2, 5},
	{3, 1, 7, 5, 0, 2, 4, 6},
	{3, 5, 0, 4, 1, 7, 2, 6},
	{3, 5, 7, 1, 6, 0, 2, 4},
	{3, 5, 7, 2, 0, 6, 4, 1},
	{3, 6, 0, 7, 4, 1, 5, 2},
	{3, 6, 2, 7, 1, 4, 0, 5},
	{3, 6, 4, 1, 5, 0, 2, 7},
	{3, 6, 4, 2, 0, 5, 7, 1},
	{3, 7, 0, 2, 5, 1, 6, 4},
	{3, 7, 0, 4, 6, 1, 5, 2},
	{3, 7, 4, 2, 0, 6, 1, 5},
	{4, 0, 3, 5, 7, 1, 6, 2},
	{4, 0, 7, 3, 1, 6, 2, 5},
	{4, 0, 7, 5, 2, 6, 1, 3},
	{4, 1, 3, 5, 7, 2, 0, 6},
	{4, 1, 3, 6, 2, 7, 5, 0},
	{4, 1, 5, 0, 6, 3, 7, 2},
	{4, 1, 7, 0, 3, 6, 2, 5},
	{4, 2, 0, 5, 7, 1, 3, 6},
	{4, 2, 0, 6, 1, 7, 5, 3},
	{4, 2, 7, 3, 6, 0, 5, 1},
	{4, 6, 0, 2, 7, 5, 3, 1},
	{4, 6, 0, 3, 1, 7, 5, 2},
	{4, 6, 1, 3, 7, 0, 2, 5},
	{4, 6, 1, 5, 2, 0, 3, 7},
	{4, 6, 1, 5, 2, 0, 7, 3},
	{4, 6, 3, 0, 2, 7, 5, 1},
	{4, 7, 3, 0, 2, 5, 1, 6},
	{4, 7, 3, 0, 6, 1, 5, 2},
	{5, 0, 4, 1, 7, 2, 6, 3},
	{5, 1, 6, 0, 2, 4, 7, 3},
	{5, 1, 6, 0, 3, 7, 4, 2},
	{5, 2, 0, 6, 4, 7, 1, 3},
	{5, 2, 0, 7, 3, 1, 6, 4},
	{5, 2, 0, 7, 4, 1, 3, 6},
	{5, 2, 4, 6, 0, 3, 1, 7},
	{5, 2, 4, 7, 0, 3, 1, 6},
	{5, 2, 6, 1, 3, 7, 0, 4},
	{5, 2, 6, 1, 7, 4, 0, 3},
	{5, 2, 6, 3, 0, 7, 1, 4},
	{5, 3, 0, 4, 7, 1, 6, 2},
	{5, 3, 1, 7, 4, 6, 0, 2},
	{5, 3, 6, 0, 2, 4, 1, 7},
	{5, 3, 6, 0, 7, 1, 4, 2},
	{5, 7, 1, 3, 0, 6, 4, 2},
	{6, 0, 2, 7, 5, 3, 1, 4},
	{6, 1, 3, 0, 7, 4, 2, 5},
	{6, 1, 5, 2, 0, 3, 7, 4},
	{6, 2, 0, 5, 7, 4, 1, 3},
	{6, 2, 7, 1, 4, 0, 5, 3},
	{6, 3, 1, 4, 7, 0, 2, 5},
	{6, 3, 1, 7, 5, 0, 2, 4},
	{6, 4, 2, 0, 5, 7, 1, 3},
	{7, 1, 3, 0, 6, 4, 2, 5},
	{7, 1, 4, 2, 0, 6, 3, 5},
	{7, 2, 0, 5, 1, 4, 6, 3},
	{7, 3, 0, 2, 5, 1, 6, 4}
};

const int N = 1 << 8;
char s[10][10];
int x[8], y[8];
int f[N];

int moves(int x, int y, int a, int b) {
	x = abs(x - a), y = abs(y - b);
	if (x == 0 && y == 0) return 0;
	if (x == 0 || y == 0) return 1;
	return x == y ? 1 : 2;
}

int main() {
	int tc, cn = 0;
	for (scanf("%d", &tc); tc--; ) {
		for (int i=0; i<8; ++i) scanf("%s", s[i]);
		for (int i=0,c=0; i<8; ++i) for (int j=0; j<8; ++j) {
			if (s[i][j] == 'q') x[c] = i, y[c++] = j;
		}
		int mn = INF;
		for (int k=0; k<92; ++k) {
			memset(f, 0, sizeof(f));
			for (int mask=1; mask<N; ++mask) {
				int n = __builtin_popcount(mask) - 1;
				f[mask] = INF;
				for (int i=0; i<8; ++i) if (mask & 1 << i) {
					int pre_mask = mask ^ (1 << i);
					int cc = f[pre_mask] + moves(x[n], y[n], i, pp[k][i]);
					f[mask] = min(cc, f[mask]);
				}
			}
			mn = min(mn, f[N-1]);
		}
		printf("Case %d: %d\n", ++cn, mn);
	}
	return 0;
}

// 296172	2013-12-06 16:14:39	 1061 - N Queen Again	 C++	 0.460	 1092	Accepted
